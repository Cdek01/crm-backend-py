import requests
from typing import Dict, List

# --- –ì–õ–ê–í–ù–´–ï –ù–ê–°–¢–†–û–ô–ö–ò ---
# –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ URL –≤–∞—à–µ–≥–æ API
API_BASE_URL = "http://89.111.169.47:8005"

# –í–∞—à —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π —Ç–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞
API_TOKEN = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkYW5pa2JlbGF2aW4yMDA2QGdtYWlsLmNvbSIsImV4cCI6MjA3NTcwNTExNH0.JXxPMrye8Vigv684SmBMF6uqt6fxd9WHajwM3j8Jj8c"
# -------------------------

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è –≤—Å–µ—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
HEADERS = {"Authorization": f"Bearer {API_TOKEN}"}


# --- –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ ---

def cleanup_test_tables(table_names: List[str]):
    """–£–¥–∞–ª—è–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ —Ç–∞–±–ª–∏—Ü—ã, —á—Ç–æ–±—ã –∫–∞–∂–¥—ã–π –∑–∞–ø—É—Å–∫ –±—ã–ª —á–∏—Å—Ç—ã–º."""
    print("\n--- –®–∞–≥ 0: –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ç–∞–±–ª–∏—Ü ---")
    try:
        response = requests.get(f"{API_BASE_URL}/api/meta/entity-types", headers=HEADERS)
        response.raise_for_status()  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –æ—à–∏–±–∫–∏ HTTP

        existing_types = response.json()
        for et in existing_types:
            if et['name'] in table_names:
                print(f"–û—á–∏—Å—Ç–∫–∞: —É–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–π —Ç–∞–±–ª–∏—Ü—ã '{et['name']}' (ID: {et['id']})")
                del_resp = requests.delete(f"{API_BASE_URL}/api/meta/entity-types/{et['id']}", headers=HEADERS)
                if del_resp.status_code == 204:
                    print(f"–¢–∞–±–ª–∏—Ü–∞ '{et['name']}' —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞.")
                else:
                    print(f"–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –Ω–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É '{et['name']}'. –°—Ç–∞—Ç—É—Å: {del_resp.status_code}")
    except requests.exceptions.RequestException as e:
        print(f"–û—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è –æ—á–∏—Å—Ç–∫–∏: {e}")


def run_relation_test():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è, –≤—ã–ø–æ–ª–Ω—è—é—â–∞—è –≤—Å–µ —à–∞–≥–∏ —Ç–µ—Å—Ç–∞."""

    company_table_name = "test_companies_relation"
    deal_table_name = "test_deals_relation"

    # –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è ID –≤—Å–µ—Ö —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö —Å—É—â–Ω–æ—Å—Ç–µ–π (—Ç–∞–±–ª–∏—Ü, –∫–æ–ª–æ–Ω–æ–∫)
    ids = {}

    # –û—á–∏—â–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –∏ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è (–¥–∞–∂–µ –µ—Å–ª–∏ –±—ã–ª–∞ –æ—à–∏–±–∫–∞)
    cleanup_test_tables([company_table_name, deal_table_name])

    try:
        # --- –®–∞–≥ 1: –°–æ–∑–¥–∞–Ω–∏–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö (—Ç–∞–±–ª–∏—Ü –∏ –∫–æ–ª–æ–Ω–æ–∫) ---
        print("\n--- –®–∞–≥ 1: –°–æ–∑–¥–∞–Ω–∏–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö ---")

        # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã "–ö–æ–º–ø–∞–Ω–∏–∏"
        comp_resp = requests.post(
            f"{API_BASE_URL}/api/meta/entity-types", headers=HEADERS,
            json={"name": company_table_name, "display_name": "–¢–µ—Å—Ç–æ–≤—ã–µ –ö–æ–º–ø–∞–Ω–∏–∏ (–°–≤—è–∑–∏)"}
        )
        comp_resp.raise_for_status()
        ids["company_type_id"] = comp_resp.json()["id"]

        # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã "–°–¥–µ–ª–∫–∏"
        deal_resp = requests.post(
            f"{API_BASE_URL}/api/meta/entity-types", headers=HEADERS,
            json={"name": deal_table_name, "display_name": "–¢–µ—Å—Ç–æ–≤—ã–µ –°–¥–µ–ª–∫–∏ (–°–≤—è–∑–∏)"}
        )
        deal_resp.raise_for_status()
        ids["deal_type_id"] = deal_resp.json()["id"]

        # –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–ª–æ–Ω–æ–∫ –¥–ª—è –ö–æ–º–ø–∞–Ω–∏–π
        attr_resp = requests.post(f"{API_BASE_URL}/api/meta/entity-types/{ids['company_type_id']}/attributes",
                                  headers=HEADERS,
                                  json={"name": "company_inn", "display_name": "–ò–ù–ù", "value_type": "string"})
        attr_resp.raise_for_status();
        ids["company_inn_attr_id"] = attr_resp.json()["id"]

        attr_resp = requests.post(f"{API_BASE_URL}/api/meta/entity-types/{ids['company_type_id']}/attributes",
                                  headers=HEADERS,
                                  json={"name": "company_name", "display_name": "–ù–∞–∑–≤–∞–Ω–∏–µ", "value_type": "string"})
        attr_resp.raise_for_status();
        ids["company_name_attr_id"] = attr_resp.json()["id"]

        # –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–ª–æ–Ω–æ–∫ –¥–ª—è –°–¥–µ–ª–æ–∫
        attr_resp = requests.post(f"{API_BASE_URL}/api/meta/entity-types/{ids['deal_type_id']}/attributes",
                                  headers=HEADERS, json={"name": "client_inn_key", "display_name": "–ò–ù–ù –ö–ª–∏–µ–Ω—Ç–∞",
                                                         "value_type": "string"})
        attr_resp.raise_for_status();
        ids["client_inn_key_attr_id"] = attr_resp.json()["id"]

        attr_resp = requests.post(f"{API_BASE_URL}/api/meta/entity-types/{ids['deal_type_id']}/attributes",
                                  headers=HEADERS,
                                  json={"name": "client_name_lookup", "display_name": "–ù–∞–∑–≤–∞–Ω–∏–µ –ö–ª–∏–µ–Ω—Ç–∞",
                                        "value_type": "relation"})
        attr_resp.raise_for_status();
        ids["client_lookup_attr_id"] = attr_resp.json()["id"]

        print("‚úÖ –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã.")

        # --- –®–∞–≥ 2: –ù–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü –¥–∞–Ω–Ω—ã–º–∏ ---
        print("\n--- –®–∞–≥ 2: –ù–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã–º–∏ ---")
        requests.post(f"{API_BASE_URL}/api/data/{company_table_name}", headers=HEADERS,
                      json={"company_inn": "7707083893", "company_name": "–ü–ê–û –°–ë–ï–†–ë–ê–ù–ö"}).raise_for_status()
        requests.post(f"{API_BASE_URL}/api/data/{company_table_name}", headers=HEADERS,
                      json={"company_inn": "7736207543", "company_name": "–û–û–û –Ø–Ω–¥–µ–∫—Å"}).raise_for_status()
        requests.post(f"{API_BASE_URL}/api/data/{deal_table_name}", headers=HEADERS,
                      json={"client_inn_key": "7707083893"}).raise_for_status()  # –°–¥–µ–ª–∫–∞ —Å–æ –°–±–µ—Ä–æ–º
        requests.post(f"{API_BASE_URL}/api/data/{deal_table_name}", headers=HEADERS,
                      json={"client_inn_key": "9999999999"}).raise_for_status()  # –°–¥–µ–ª–∫–∞ —Å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∫–æ–º–ø–∞–Ω–∏–µ–π
        requests.post(f"{API_BASE_URL}/api/data/{deal_table_name}", headers=HEADERS,
                      json={"client_inn_key": "7736207543"}).raise_for_status()  # –°–¥–µ–ª–∫–∞ —Å –Ø–Ω–¥–µ–∫—Å–æ–º
        print("‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã.")

        # --- –®–∞–≥ 3: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–≤—è–∑–∏ ---
        print("\n--- –®–∞–≥ 3: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–≤—è–∑–∏ ---")
        relation_payload = {
            "target_entity_type_id": ids["company_type_id"],  # –°–º–æ—Ç—Ä–µ—Ç—å –≤ —Ç–∞–±–ª–∏—Ü—É "–ö–æ–º–ø–∞–Ω–∏–∏"
            "source_attribute_id": ids["client_inn_key_attr_id"],  # –ë—Ä–∞—Ç—å –∫–ª—é—á –∏–∑ "–ò–ù–ù –ö–ª–∏–µ–Ω—Ç–∞" –≤ –°–¥–µ–ª–∫–∞—Ö
            "target_attribute_id": ids["company_inn_attr_id"],  # –ò—Å–∫–∞—Ç—å —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –≤ "–ò–ù–ù" –≤ –ö–æ–º–ø–∞–Ω–∏—è—Ö
            "display_attribute_id": ids["company_name_attr_id"]  # –û—Ç–æ–±—Ä–∞–∂–∞—Ç—å "–ù–∞–∑–≤–∞–Ω–∏–µ" –∏–∑ –ö–æ–º–ø–∞–Ω–∏–π
        }
        update_resp = requests.put(
            f"{API_BASE_URL}/api/meta/entity-types/{ids['deal_type_id']}/attributes/{ids['client_lookup_attr_id']}",
            headers=HEADERS, json=relation_payload
        )
        update_resp.raise_for_status()
        print("‚úÖ –°–≤—è–∑—å —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞.")

        # --- –®–∞–≥ 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ ---
        print("\n--- –®–∞–≥ 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ ---")
        get_deals_resp = requests.get(f"{API_BASE_URL}/api/data/{deal_table_name}", headers=HEADERS)
        get_deals_resp.raise_for_status()

        deals_data = get_deals_resp.json()
        assert len(deals_data) == 3, "–û–∂–∏–¥–∞–ª–æ—Å—å 3 —Å–¥–µ–ª–∫–∏"

        deals_by_inn = {d["client_inn_key"]: d for d in deals_data}

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ 1: –°–¥–µ–ª–∫–∞ —Å–æ –°–±–µ—Ä–æ–º
        sber_deal = deals_by_inn.get("7707083893")
        assert sber_deal is not None, "–°–¥–µ–ª–∫–∞ —Å –ò–ù–ù –°–±–µ—Ä–±–∞–Ω–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!"
        assert sber_deal["client_name_lookup"] == "–ü–ê–û –°–ë–ï–†–ë–ê–ù–ö", "–ù–∞–∑–≤–∞–Ω–∏–µ –°–±–µ—Ä–±–∞–Ω–∫–∞ –Ω–µ –ø–æ–¥—Ç—è–Ω—É–ª–æ—Å—å"
        print("‚úì –ü—Ä–æ–≤–µ—Ä–∫–∞ 1 (–°–±–µ—Ä–±–∞–Ω–∫): OK")

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ 2: –°–¥–µ–ª–∫–∞ —Å –Ø–Ω–¥–µ–∫—Å–æ–º
        yandex_deal = deals_by_inn.get("7736207543")
        assert yandex_deal is not None, "–°–¥–µ–ª–∫–∞ —Å –ò–ù–ù –Ø–Ω–¥–µ–∫—Å–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!"
        assert yandex_deal["client_name_lookup"] == "–û–û–û –Ø–Ω–¥–µ–∫—Å", "–ù–∞–∑–≤–∞–Ω–∏–µ –Ø–Ω–¥–µ–∫—Å–∞ –Ω–µ –ø–æ–¥—Ç—è–Ω—É–ª–æ—Å—å"
        print("‚úì –ü—Ä–æ–≤–µ—Ä–∫–∞ 2 (–Ø–Ω–¥–µ–∫—Å): OK")

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ 3: –°–¥–µ–ª–∫–∞ —Å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –ò–ù–ù
        fake_deal = deals_by_inn.get("9999999999")
        assert fake_deal is not None, "–°–¥–µ–ª–∫–∞ —Å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –ò–ù–ù –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!"
        assert fake_deal.get("client_name_lookup") is None, "–î–ª—è –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ò–ù–ù –ø–æ–ª–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø—É—Å—Ç—ã–º (None)"
        print("‚úì –ü—Ä–æ–≤–µ—Ä–∫–∞ 3 (–ù–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ò–ù–ù): OK")

        print("\nüéâüéâüéâ –¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ —Å–≤—è–∑–µ–π —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–π–¥–µ–Ω! üéâüéâüéâ")

    except requests.exceptions.RequestException as e:
        print(f"\n‚ùå –û–®–ò–ë–ö–ê –ù–ê –®–ê–ì–ï: {e}")
        if e.response is not None:
            print(f"–°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {e.response.status_code}")
            print(f"–¢–µ–ª–æ –æ—Ç–≤–µ—Ç–∞: {e.response.text}")
    except AssertionError as e:
        print(f"\n‚ùå –ü–†–û–í–ï–†–ö–ê –ù–ï –ü–†–û–ô–î–ï–ù–ê: {e}")
    finally:
        # –í–Ω–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞, –ø—ã—Ç–∞–µ–º—Å—è –ø–æ—á–∏—Å—Ç–∏—Ç—å –∑–∞ —Å–æ–±–æ–π
        cleanup_test_tables([company_table_name, deal_table_name])


if __name__ == "__main__":
    run_relation_test()