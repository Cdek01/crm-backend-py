import requests
import json
import time

# --- –ù–ê–°–¢–†–û–ô–ö–ò ---
BASE_URL = "http://127.0.0.1:8000"
CORRECT_REGISTRATION_TOKEN = "your-super-secret-and-unique-token-12345"


# -----------------
def print_status(ok, message):
    if ok:
        print(f"‚úÖ [PASS] {message}")
    else:
        print(f"‚ùå [FAIL] {message}"); exit(1)
def print_header(title):
    print("\n" + "=" * 60)
    print(f" {title} ".center(60, "="))
    print("=" * 60)

def register_and_login():
    unique_id = int(time.time())
    email = f"AntonShlips12@example.com"
    password = "AntonShlips12(1985)"
    reg_payload = {"email": email, "password": password, "full_name": "Select Tester",
                   "registration_token": CORRECT_REGISTRATION_TOKEN}
    requests.post(f"{BASE_URL}/api/auth/register", json=reg_payload).raise_for_status()
    auth_payload = {'username': email, 'password': password}
    token = requests.post(f"{BASE_URL}/api/auth/token", data=auth_payload).json()['access_token']
    return {'Authorization': f'Bearer {token}'}


def create_table_with_attrs(headers, config):
    """–°–æ–∑–¥–∞–µ—Ç —Ç–∞–±–ª–∏—Ü—É –∏ –µ–µ –∞—Ç—Ä–∏–±—É—Ç—ã, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç ID —Ç–∞–±–ª–∏—Ü—ã –∏ —Å–ª–æ–≤–∞—Ä—å –∞—Ç—Ä–∏–±—É—Ç–æ–≤."""
    table_resp = requests.post(f"{BASE_URL}/api/meta/entity-types", headers=headers,
                               json={"name": config['name'], "display_name": config['display_name']}).json()
    table_id = table_resp['id']

    attrs_map = {}
    for attr_payload in config['attributes']:
        url = f"{BASE_URL}/api/meta/entity-types/{table_id}/attributes"
        attr_resp = requests.post(url, headers=headers, json=attr_payload).json()
        attrs_map[attr_resp['name']] = attr_resp

    return table_id, attrs_map


# --- –û–°–ù–û–í–ù–û–ô –¢–ï–°–¢ ---
def run_lookup_test():
    try:
        # --- –®–ê–ì 1: –ü–û–î–ì–û–¢–û–í–ö–ê ---
        print_header("–ü–û–î–ì–û–¢–û–í–ö–ê: –ê–í–¢–û–†–ò–ó–ê–¶–ò–Ø –ò –°–û–ó–î–ê–ù–ò–ï –¢–ê–ë–õ–ò–¶")
        headers = register_and_login()

        # 1.1 –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É-–ò–°–¢–û–ß–ù–ò–ö "–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫ –∫–æ–º–ø–∞–Ω–∏–π"
        companies_config = {
            "name": f"companies_{int(time.time())}",
            "display_name": "–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫ –∫–æ–º–ø–∞–Ω–∏–π",
            "attributes": [
                {"name": "inn", "display_name": "–ò–ù–ù", "value_type": "string"},
                {"name": "legal_name", "display_name": "–Æ—Ä–∏–¥–∏—á–µ—Å–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ", "value_type": "string"},
            ]
        }
        companies_table_id, companies_attrs = create_table_with_attrs(headers, companies_config)
        print(f" -> –°–æ–∑–¥–∞–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞-–∏—Å—Ç–æ—á–Ω–∏–∫ '{companies_config['name']}' (ID: {companies_table_id})")

        # 1.2 –ù–∞–ø–æ–ª–Ω—è–µ–º –µ–µ –¥–∞–Ω–Ω—ã–º–∏
        requests.post(f"{BASE_URL}/api/data/{companies_config['name']}", headers=headers,
                      json={"inn": "7707083893", "legal_name": "–°–ë–ï–†–ë–ê–ù–ö"}).raise_for_status()
        requests.post(f"{BASE_URL}/api/data/{companies_config['name']}", headers=headers,
                      json={"inn": "7728168971", "legal_name": "–ì–ê–ó–ü–†–û–ú"}).raise_for_status()
        print(" -> –¢–∞–±–ª–∏—Ü–∞-–∏—Å—Ç–æ—á–Ω–∏–∫ –Ω–∞–ø–æ–ª–Ω–µ–Ω–∞ –¥–∞–Ω–Ω—ã–º–∏.")

        # 1.3 –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É-–ü–†–ò–ï–ú–ù–ò–ö "–°–¥–µ–ª–∫–∏" —Å–æ —Å–≤—è–∑–∞–Ω–Ω–æ–π –∫–æ–ª–æ–Ω–∫–æ–π
        deals_config = {
            "name": f"deals_{int(time.time())}",
            "display_name": "–°–¥–µ–ª–∫–∏",
            "attributes": [
                {"name": "deal_title", "display_name": "–ù–∞–∑–≤–∞–Ω–∏–µ —Å–¥–µ–ª–∫–∏", "value_type": "string"},
                {"name": "client_inn", "display_name": "–ò–ù–ù –∫–ª–∏–µ–Ω—Ç–∞", "value_type": "string"},
                {
                    "name": "client_name_lookup",
                    # --- –î–û–ë–ê–í–¨–¢–ï –≠–¢–£ –°–¢–†–û–ö–£ ---
                    "display_name": "–ù–∞–∑–≤–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞ (–∏–∑ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∞)",
                    # ---------------------------
                    "value_type": "relation",
                    "target_entity_type_id": companies_table_id,
                    "source_attribute_id": None, # –≠—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ, –º—ã –æ–±–Ω–æ–≤–∏–º –µ–≥–æ –ø–æ–∑–∂–µ
                    "target_attribute_id": companies_attrs['inn']['id'],
                    "display_attribute_id": companies_attrs['legal_name']['id'],
                }
            ]
        }
        deals_table_id, deals_attrs = create_table_with_attrs(headers, deals_config)

        # --- –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ó–î–ï–°–¨ ---
        # –¢–µ–ø–µ—Ä—å, –∫–æ–≥–¥–∞ —É –Ω–∞—Å –µ—Å—Ç—å ID –≤—Å–µ—Ö –∫–æ–ª–æ–Ω–æ–∫, –º—ã –û–ë–ù–û–í–õ–Ø–ï–ú —Å–≤—è–∑–∞–Ω–Ω—É—é –∫–æ–ª–æ–Ω–∫—É,
        # —á—Ç–æ–±—ã —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –µ–π –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π `source_attribute_id`.
        lookup_attr_id = deals_attrs['client_name_lookup']['id']
        source_attr_id = deals_attrs['client_inn']['id']

        update_payload = {"source_attribute_id": source_attr_id}
        update_url = f"{BASE_URL}/api/meta/entity-types/{deals_table_id}/attributes/{lookup_attr_id}"
        requests.put(update_url, headers=headers, json=update_payload).raise_for_status()
        # ---------------------------

        print(f" -> –°–æ–∑–¥–∞–Ω–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞-–ø—Ä–∏–µ–º–Ω–∏–∫ '{deals_config['name']}'.")

        # --- –®–ê–ì 2: –°–û–ó–î–ê–ù–ò–ï –î–ê–ù–ù–´–• –í –ü–†–ò–ï–ú–ù–ò–ö–ï ---
        print_header("–®–ê–ì 2: –°–û–ó–î–ê–ù–ò–ï –°–î–ï–õ–ö–ò –° –£–ö–ê–ó–ê–ù–ò–ï–ú –ò–ù–ù")

        deal_payload = {"deal_title": "–ü—Ä–æ–¥–∞–∂–∞ –ü–û", "client_inn": "7707083893"}
        # `client_name_lookup` –Ω–µ –ø–µ—Ä–µ–¥–∞–µ–º, –æ–Ω –¥–æ–ª–∂–µ–Ω –≤—ã—á–∏—Å–ª–∏—Ç—å—Å—è —Å–∞–º
        requests.post(f"{BASE_URL}/api/data/{deals_config['name']}", headers=headers,
                      json=deal_payload).raise_for_status()
        print_status(True, "–¢–µ—Å—Ç–æ–≤–∞—è —Å–¥–µ–ª–∫–∞ –¥–ª—è '–°–ë–ï–†–ë–ê–ù–ö' —Å–æ–∑–¥–∞–Ω–∞.")

        # --- –®–ê–ì 3: –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê ---
        print_header("–®–ê–ì 3: –ü–†–û–í–ï–†–ö–ê, –ß–¢–û –°–í–Ø–ó–ê–ù–ù–û–ï –ü–û–õ–ï –ó–ê–ü–û–õ–ù–ò–õ–û–°–¨")

        # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Å–¥–µ–ª–æ–∫
        all_deals = requests.get(f"{BASE_URL}/api/data/{deals_config['name']}", headers=headers).json()

        print_status(len(all_deals) > 0, "–ü–æ–ª—É—á–µ–Ω –Ω–µ–ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ —Å–¥–µ–ª–æ–∫.")

        created_deal = all_deals[0]
        print(f" -> –ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–¥–µ–ª–∫–∏: {json.dumps(created_deal, indent=2, ensure_ascii=False)}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∏—Å—Ö–æ–¥–Ω–æ–µ –ø–æ–ª–µ –Ω–∞ –º–µ—Å—Ç–µ
        print_status(created_deal.get('client_inn') == "7707083893", "–ò—Å—Ö–æ–¥–Ω—ã–π –∫–ª—é—á 'client_inn' –Ω–∞ –º–µ—Å—Ç–µ.")

        # –ì–ª–∞–≤–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
        print_status(
            created_deal.get('client_name_lookup') == "–°–ë–ï–†–ë–ê–ù–ö",
            f"–°–≤—è–∑–∞–Ω–Ω–æ–µ –ø–æ–ª–µ 'client_name_lookup' –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º '–°–ë–ï–†–ë–ê–ù–ö'."
        )

        print("\n" + "=" * 60)
        print("üéâüéâüéâ –¢–ï–°–¢ –°–í–Ø–ó–ê–ù–ù–´–• –ü–û–õ–ï–ô (LOOK UP) –ü–†–û–ô–î–ï–ù –£–°–ü–ï–®–ù–û! üéâüéâüéâ")

    except requests.exceptions.HTTPError as e:
        print(f"\n‚ùå –û–®–ò–ë–ö–ê HTTP: {e.response.status_code} - {e.response.text}")
    except Exception as e:
        print(f"\n‚ùå –ù–ï–ü–†–ï–î–í–ò–î–ï–ù–ù–ê–Ø –û–®–ò–ë–ö–ê: {e}")


# ... (–≤—Å—Ç–∞–≤—å—Ç–µ —Å—é–¥–∞ `register_and_login`, `print_status`, `print_header`)

if __name__ == "__main__":
    run_lookup_test()