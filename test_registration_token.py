# # test_registration_token.py
# import requests
# import time
#
# # --- –ù–ê–°–¢–†–û–ô–ö–ò ---
# BASE_URL = "http://127.0.0.1:8005"
# # --- –ù–ê–°–¢–†–û–ô–ö–ò ---
# # BASE_URL = "http://89.111.169.47:8005"
# # –í–ê–ñ–ù–û: –£–∫–∞–∂–∏—Ç–µ –∑–¥–µ—Å—å —Ç–æ—Ç –∂–µ —Ç–æ–∫–µ–Ω, —á—Ç–æ –∏ –≤ –≤–∞—à–µ–º .env —Ñ–∞–π–ª–µ
# CORRECT_REGISTRATION_TOKEN = "your-super-secret-and-unique-token-12345"
# # -----------------
#
# UNIQUE_ID = int(time.time())
#
#
# def print_status(ok, message):
#     """–í—ã–≤–æ–¥–∏—Ç —Å—Ç–∞—Ç—É—Å –æ–ø–µ—Ä–∞—Ü–∏–∏."""
#     if ok:
#         print(f"‚úÖ [PASS] {message}")
#     else:
#         print(f"‚ùå [FAIL] {message}")
#         exit(1)
#
#
# def run_test():
#     print("-" * 50)
#     print("--- –¢–ï–°–¢ 1: –ü–û–ü–´–¢–ö–ê –†–ï–ì–ò–°–¢–†–ê–¶–ò–ò –° –ù–ï–í–ï–†–ù–´–ú –¢–û–ö–ï–ù–û–ú ---")
#     USER_EMAIL = "user@example.com"
#     USER_PASSWORD = "string"
#     payload_fail = {
#         "email": USER_EMAIL,
#         "password": USER_PASSWORD,
#         "full_name": "user",
#         "registration_token": "this-is-a-wrong-token"
#     }
#
#     response_fail = requests.post(f"{BASE_URL}/api/auth/register", json=payload_fail)
#
#     print(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω –∑–∞–ø—Ä–æ—Å —Å —Ç–æ–∫–µ–Ω–æ–º: '{payload_fail['registration_token']}'")
#     print(f"–°–µ—Ä–≤–µ—Ä –æ—Ç–≤–µ—Ç–∏–ª —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º: {response_fail.status_code}")
#     print(f"–¢–µ–ª–æ –æ—Ç–≤–µ—Ç–∞: {response_fail.text}")
#
#     print_status(
#         response_fail.status_code == 403,
#         "–°–µ—Ä–≤–µ—Ä –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ—Ç–∫–ª–æ–Ω–∏–ª –∑–∞–ø—Ä–æ—Å —Å –Ω–µ–≤–µ—Ä–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º (—Å—Ç–∞—Ç—É—Å 403 Forbidden)."
#     )
#
#     print("-" * 50)
#     print("--- –¢–ï–°–¢ 2: –ü–û–ü–´–¢–ö–ê –†–ï–ì–ò–°–¢–†–ê–¶–ò–ò –° –í–ï–†–ù–´–ú –¢–û–ö–ï–ù–û–ú ---")
#
#     payload_success = {
#         "email": f"success_user_{UNIQUE_ID}@example.com",
#         "password": "password123",
#         "full_name": "Success User",
#         "registration_token": CORRECT_REGISTRATION_TOKEN
#     }
#
#     response_success = requests.post(f"{BASE_URL}/api/auth/register", json=payload_success)
#
#     print(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω –∑–∞–ø—Ä–æ—Å —Å —Ç–æ–∫–µ–Ω–æ–º: '{payload_success['registration_token']}'")
#     print(f"–°–µ—Ä–≤–µ—Ä –æ—Ç–≤–µ—Ç–∏–ª —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º: {response_success.status_code}")
#
#     print_status(
#         response_success.status_code == 201,
#         "–°–µ—Ä–≤–µ—Ä —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–ª –∑–∞–ø—Ä–æ—Å —Å –≤–µ—Ä–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º (—Å—Ç–∞—Ç—É—Å 201 Created)."
#     )
#
#     print("-" * 50)
#     print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –¥–ª—è —Ç–æ–∫–µ–Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
#
#
# if __name__ == "__main__":
#     run_test()








import requests
import time

# --- –ù–ê–°–¢–†–û–ô–ö–ò ---
BASE_URL = "http://89.111.169.47:8005"   # "http://127.0.0.1:8005"
CORRECT_REGISTRATION_TOKEN = "your-super-secret-and-unique-token-12345"

def print_status(ok, message):
    if ok:
        print(f"‚úÖ [PASS] {message}")
    else:
        print(f"‚ùå [FAIL] {message}"); exit(1)

def print_header(title):
    print("\n" + "=" * 60)
    print(f" {title} ".center(60, "="))
    print("=" * 60)

def register_and_login():
    unique_id = int(time.time())
    email = f"AntonShlips@example.com"
    password = "AntonShlips(1985)"
    reg_payload = {"email": email, "password": password, "full_name": "Select Tester",
                   "registration_token": CORRECT_REGISTRATION_TOKEN}
    requests.post(f"{BASE_URL}/api/auth/register", json=reg_payload).raise_for_status()
    auth_payload = {'username': email, 'password': password}
    token = requests.post(f"{BASE_URL}/api/auth/token", data=auth_payload).json()['access_token']
    return {'Authorization': f'Bearer {token}'}

if __name__ == "__main__":
    print_header("–†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø")
    headers = register_and_login()
    print_status(True, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω. –¢–æ–∫–µ–Ω: {headers['Authorization'][:30]}...")